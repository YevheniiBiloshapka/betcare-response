/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/fireworks-js/dist/index.es.js":
/*!****************************************************!*\
  !*** ./node_modules/fireworks-js/dist/index.es.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Fireworks: () => (/* binding */ T),\n/* harmony export */   \"default\": () => (/* binding */ T)\n/* harmony export */ });\n/**\n * name: fireworks-js\n * version: 2.10.7\n * author: Vitalij Ryndin (https://crashmax.ru)\n * homepage: https://fireworks.js.org\n * license MIT\n */\nfunction f(e) {\n  return Math.abs(Math.floor(e));\n}\nfunction c(e, t) {\n  return Math.random() * (t - e) + e;\n}\nfunction o(e, t) {\n  return Math.floor(c(e, t + 1));\n}\nfunction m(e, t, i, s) {\n  const n = Math.pow;\n  return Math.sqrt(n(e - i, 2) + n(t - s, 2));\n}\nfunction x(e, t, i = 1) {\n  if (e > 360 || e < 0)\n    throw new Error(`Expected hue 0-360 range, got \\`${e}\\``);\n  if (t > 100 || t < 0)\n    throw new Error(`Expected lightness 0-100 range, got \\`${t}\\``);\n  if (i > 1 || i < 0)\n    throw new Error(`Expected alpha 0-1 range, got \\`${i}\\``);\n  return `hsla(${e}, 100%, ${t}%, ${i})`;\n}\nconst g = (e) => {\n  if (typeof e == \"object\" && e !== null) {\n    if (typeof Object.getPrototypeOf == \"function\") {\n      const t = Object.getPrototypeOf(e);\n      return t === Object.prototype || t === null;\n    }\n    return Object.prototype.toString.call(e) === \"[object Object]\";\n  }\n  return !1;\n}, y = [\n  \"__proto__\",\n  \"constructor\",\n  \"prototype\"\n], v = (...e) => e.reduce((t, i) => (Object.keys(i).forEach((s) => {\n  y.includes(s) || (Array.isArray(t[s]) && Array.isArray(i[s]) ? t[s] = i[s] : g(t[s]) && g(i[s]) ? t[s] = v(t[s], i[s]) : t[s] = i[s]);\n}), t), {});\nfunction b(e, t) {\n  let i;\n  return (...s) => {\n    i && clearTimeout(i), i = setTimeout(() => e(...s), t);\n  };\n}\nclass S {\n  x;\n  y;\n  ctx;\n  hue;\n  friction;\n  gravity;\n  flickering;\n  lineWidth;\n  explosionLength;\n  angle;\n  speed;\n  brightness;\n  coordinates = [];\n  decay;\n  alpha = 1;\n  constructor({\n    x: t,\n    y: i,\n    ctx: s,\n    hue: n,\n    decay: h,\n    gravity: a,\n    friction: r,\n    brightness: u,\n    flickering: p,\n    lineWidth: l,\n    explosionLength: d\n  }) {\n    for (this.x = t, this.y = i, this.ctx = s, this.hue = n, this.gravity = a, this.friction = r, this.flickering = p, this.lineWidth = l, this.explosionLength = d, this.angle = c(0, Math.PI * 2), this.speed = o(1, 10), this.brightness = o(u.min, u.max), this.decay = c(h.min, h.max); this.explosionLength--; )\n      this.coordinates.push([t, i]);\n  }\n  update(t) {\n    this.coordinates.pop(), this.coordinates.unshift([this.x, this.y]), this.speed *= this.friction, this.x += Math.cos(this.angle) * this.speed, this.y += Math.sin(this.angle) * this.speed + this.gravity, this.alpha -= this.decay, this.alpha <= this.decay && t();\n  }\n  draw() {\n    const t = this.coordinates.length - 1;\n    this.ctx.beginPath(), this.ctx.lineWidth = this.lineWidth, this.ctx.fillStyle = x(this.hue, this.brightness, this.alpha), this.ctx.moveTo(\n      this.coordinates[t][0],\n      this.coordinates[t][1]\n    ), this.ctx.lineTo(this.x, this.y), this.ctx.strokeStyle = x(\n      this.hue,\n      this.flickering ? c(0, this.brightness) : this.brightness,\n      this.alpha\n    ), this.ctx.stroke();\n  }\n}\nclass E {\n  constructor(t, i) {\n    this.options = t, this.canvas = i, this.pointerDown = this.pointerDown.bind(this), this.pointerUp = this.pointerUp.bind(this), this.pointerMove = this.pointerMove.bind(this);\n  }\n  active = !1;\n  x;\n  y;\n  get mouseOptions() {\n    return this.options.mouse;\n  }\n  mount() {\n    this.canvas.addEventListener(\"pointerdown\", this.pointerDown), this.canvas.addEventListener(\"pointerup\", this.pointerUp), this.canvas.addEventListener(\"pointermove\", this.pointerMove);\n  }\n  unmount() {\n    this.canvas.removeEventListener(\"pointerdown\", this.pointerDown), this.canvas.removeEventListener(\"pointerup\", this.pointerUp), this.canvas.removeEventListener(\"pointermove\", this.pointerMove);\n  }\n  usePointer(t, i) {\n    const { click: s, move: n } = this.mouseOptions;\n    (s || n) && (this.x = t.pageX - this.canvas.offsetLeft, this.y = t.pageY - this.canvas.offsetTop, this.active = i);\n  }\n  pointerDown(t) {\n    this.usePointer(t, this.mouseOptions.click);\n  }\n  pointerUp(t) {\n    this.usePointer(t, !1);\n  }\n  pointerMove(t) {\n    this.usePointer(t, this.active);\n  }\n}\nclass O {\n  hue;\n  rocketsPoint;\n  opacity;\n  acceleration;\n  friction;\n  gravity;\n  particles;\n  explosion;\n  mouse;\n  boundaries;\n  sound;\n  delay;\n  brightness;\n  decay;\n  flickering;\n  intensity;\n  traceLength;\n  traceSpeed;\n  lineWidth;\n  lineStyle;\n  autoresize;\n  constructor() {\n    this.autoresize = !0, this.lineStyle = \"round\", this.flickering = 50, this.traceLength = 3, this.traceSpeed = 10, this.intensity = 30, this.explosion = 5, this.gravity = 1.5, this.opacity = 0.5, this.particles = 50, this.friction = 0.95, this.acceleration = 1.05, this.hue = {\n      min: 0,\n      max: 360\n    }, this.rocketsPoint = {\n      min: 50,\n      max: 50\n    }, this.lineWidth = {\n      explosion: {\n        min: 1,\n        max: 3\n      },\n      trace: {\n        min: 1,\n        max: 2\n      }\n    }, this.mouse = {\n      click: !1,\n      move: !1,\n      max: 1\n    }, this.delay = {\n      min: 30,\n      max: 60\n    }, this.brightness = {\n      min: 50,\n      max: 80\n    }, this.decay = {\n      min: 0.015,\n      max: 0.03\n    }, this.sound = {\n      enabled: !1,\n      files: [\n        \"explosion0.mp3\",\n        \"explosion1.mp3\",\n        \"explosion2.mp3\"\n      ],\n      volume: {\n        min: 4,\n        max: 8\n      }\n    }, this.boundaries = {\n      debug: !1,\n      height: 0,\n      width: 0,\n      x: 50,\n      y: 50\n    };\n  }\n  update(t) {\n    Object.assign(this, v(this, t));\n  }\n}\nclass z {\n  constructor(t, i) {\n    this.options = t, this.render = i;\n  }\n  tick = 0;\n  rafId = 0;\n  fps = 60;\n  tolerance = 0.1;\n  now;\n  mount() {\n    this.now = performance.now();\n    const t = 1e3 / this.fps, i = (s) => {\n      this.rafId = requestAnimationFrame(i);\n      const n = s - this.now;\n      n >= t - this.tolerance && (this.render(), this.now = s - n % t, this.tick += n * (this.options.intensity * Math.PI) / 1e3);\n    };\n    this.rafId = requestAnimationFrame(i);\n  }\n  unmount() {\n    cancelAnimationFrame(this.rafId);\n  }\n}\nclass L {\n  constructor(t, i, s) {\n    this.options = t, this.updateSize = i, this.container = s;\n  }\n  resizer;\n  mount() {\n    if (!this.resizer) {\n      const t = b(() => this.updateSize(), 100);\n      this.resizer = new ResizeObserver(t);\n    }\n    this.options.autoresize && this.resizer.observe(this.container);\n  }\n  unmount() {\n    this.resizer && this.resizer.unobserve(this.container);\n  }\n}\nclass M {\n  constructor(t) {\n    this.options = t, this.init();\n  }\n  buffers = [];\n  audioContext;\n  onInit = !1;\n  get isEnabled() {\n    return this.options.sound.enabled;\n  }\n  get soundOptions() {\n    return this.options.sound;\n  }\n  init() {\n    !this.onInit && this.isEnabled && (this.onInit = !0, this.audioContext = new (window.AudioContext || window.webkitAudioContext)(), this.loadSounds());\n  }\n  async loadSounds() {\n    for (const t of this.soundOptions.files) {\n      const i = await (await fetch(t)).arrayBuffer();\n      this.audioContext.decodeAudioData(i).then((s) => {\n        this.buffers.push(s);\n      }).catch((s) => {\n        throw s;\n      });\n    }\n  }\n  play() {\n    if (this.isEnabled && this.buffers.length) {\n      const t = this.audioContext.createBufferSource(), i = this.buffers[o(0, this.buffers.length - 1)], s = this.audioContext.createGain();\n      t.buffer = i, s.gain.value = c(\n        this.soundOptions.volume.min / 100,\n        this.soundOptions.volume.max / 100\n      ), s.connect(this.audioContext.destination), t.connect(s), t.start(0);\n    } else\n      this.init();\n  }\n}\nclass C {\n  x;\n  y;\n  sx;\n  sy;\n  dx;\n  dy;\n  ctx;\n  hue;\n  speed;\n  acceleration;\n  traceLength;\n  totalDistance;\n  angle;\n  brightness;\n  coordinates = [];\n  currentDistance = 0;\n  constructor({\n    x: t,\n    y: i,\n    dx: s,\n    dy: n,\n    ctx: h,\n    hue: a,\n    speed: r,\n    traceLength: u,\n    acceleration: p\n  }) {\n    for (this.x = t, this.y = i, this.sx = t, this.sy = i, this.dx = s, this.dy = n, this.ctx = h, this.hue = a, this.speed = r, this.traceLength = u, this.acceleration = p, this.totalDistance = m(t, i, s, n), this.angle = Math.atan2(n - i, s - t), this.brightness = o(50, 70); this.traceLength--; )\n      this.coordinates.push([t, i]);\n  }\n  update(t) {\n    this.coordinates.pop(), this.coordinates.unshift([this.x, this.y]), this.speed *= this.acceleration;\n    const i = Math.cos(this.angle) * this.speed, s = Math.sin(this.angle) * this.speed;\n    this.currentDistance = m(\n      this.sx,\n      this.sy,\n      this.x + i,\n      this.y + s\n    ), this.currentDistance >= this.totalDistance ? t(this.dx, this.dy, this.hue) : (this.x += i, this.y += s);\n  }\n  draw() {\n    const t = this.coordinates.length - 1;\n    this.ctx.beginPath(), this.ctx.moveTo(\n      this.coordinates[t][0],\n      this.coordinates[t][1]\n    ), this.ctx.lineTo(this.x, this.y), this.ctx.strokeStyle = x(this.hue, this.brightness), this.ctx.stroke();\n  }\n}\nclass T {\n  target;\n  container;\n  canvas;\n  ctx;\n  width;\n  height;\n  traces = [];\n  explosions = [];\n  waitStopRaf;\n  running = !1;\n  opts;\n  sound;\n  resize;\n  mouse;\n  raf;\n  constructor(t, i = {}) {\n    this.target = t, this.container = t, this.opts = new O(), this.createCanvas(this.target), this.updateOptions(i), this.sound = new M(this.opts), this.resize = new L(\n      this.opts,\n      this.updateSize.bind(this),\n      this.container\n    ), this.mouse = new E(this.opts, this.canvas), this.raf = new z(this.opts, this.render.bind(this));\n  }\n  get isRunning() {\n    return this.running;\n  }\n  get version() {\n    return \"2.10.7\";\n  }\n  get currentOptions() {\n    return this.opts;\n  }\n  start() {\n    this.running || (this.canvas.isConnected || this.createCanvas(this.target), this.running = !0, this.resize.mount(), this.mouse.mount(), this.raf.mount());\n  }\n  stop(t = !1) {\n    !this.running || (this.running = !1, this.resize.unmount(), this.mouse.unmount(), this.raf.unmount(), this.clear(), t && this.canvas.remove());\n  }\n  async waitStop(t) {\n    if (!!this.running)\n      return new Promise((i) => {\n        this.waitStopRaf = () => {\n          !this.waitStopRaf || (requestAnimationFrame(this.waitStopRaf), !this.traces.length && !this.explosions.length && (this.waitStopRaf = null, this.stop(t), i()));\n        }, this.waitStopRaf();\n      });\n  }\n  pause() {\n    this.running = !this.running, this.running ? this.raf.mount() : this.raf.unmount();\n  }\n  clear() {\n    !this.ctx || (this.traces = [], this.explosions = [], this.ctx.clearRect(0, 0, this.width, this.height));\n  }\n  launch(t = 1) {\n    for (let i = 0; i < t; i++)\n      this.createTrace();\n    this.waitStopRaf || (this.start(), this.waitStop());\n  }\n  updateOptions(t) {\n    this.opts.update(t);\n  }\n  updateSize({\n    width: t = this.container.clientWidth,\n    height: i = this.container.clientHeight\n  } = {}) {\n    this.width = t, this.height = i, this.canvas.width = t, this.canvas.height = i, this.updateBoundaries({\n      ...this.opts.boundaries,\n      width: t,\n      height: i\n    });\n  }\n  updateBoundaries(t) {\n    this.updateOptions({ boundaries: t });\n  }\n  createCanvas(t) {\n    t instanceof HTMLCanvasElement ? (t.isConnected || document.body.append(t), this.canvas = t) : (this.canvas = document.createElement(\"canvas\"), this.container.append(this.canvas)), this.ctx = this.canvas.getContext(\"2d\"), this.updateSize();\n  }\n  render() {\n    if (!this.ctx || !this.running)\n      return;\n    const { opacity: t, lineStyle: i, lineWidth: s } = this.opts;\n    this.ctx.globalCompositeOperation = \"destination-out\", this.ctx.fillStyle = `rgba(0, 0, 0, ${t})`, this.ctx.fillRect(0, 0, this.width, this.height), this.ctx.globalCompositeOperation = \"lighter\", this.ctx.lineCap = i, this.ctx.lineJoin = \"round\", this.ctx.lineWidth = c(s.trace.min, s.trace.max), this.initTrace(), this.drawTrace(), this.drawExplosion();\n  }\n  createTrace() {\n    const {\n      hue: t,\n      rocketsPoint: i,\n      boundaries: s,\n      traceLength: n,\n      traceSpeed: h,\n      acceleration: a,\n      mouse: r\n    } = this.opts;\n    this.traces.push(\n      new C({\n        x: this.width * o(i.min, i.max) / 100,\n        y: this.height,\n        dx: this.mouse.x && r.move || this.mouse.active ? this.mouse.x : o(s.x, s.width - s.x * 2),\n        dy: this.mouse.y && r.move || this.mouse.active ? this.mouse.y : o(s.y, s.height * 0.5),\n        ctx: this.ctx,\n        hue: o(t.min, t.max),\n        speed: h,\n        acceleration: a,\n        traceLength: f(n)\n      })\n    );\n  }\n  initTrace() {\n    if (this.waitStopRaf)\n      return;\n    const { delay: t, mouse: i } = this.opts;\n    (this.raf.tick > o(t.min, t.max) || this.mouse.active && i.max > this.traces.length) && (this.createTrace(), this.raf.tick = 0);\n  }\n  drawTrace() {\n    let t = this.traces.length;\n    for (; t--; )\n      this.traces[t].draw(), this.traces[t].update((i, s, n) => {\n        this.initExplosion(i, s, n), this.sound.play(), this.traces.splice(t, 1);\n      });\n  }\n  initExplosion(t, i, s) {\n    const {\n      particles: n,\n      flickering: h,\n      lineWidth: a,\n      explosion: r,\n      brightness: u,\n      friction: p,\n      gravity: l,\n      decay: d\n    } = this.opts;\n    let w = f(n);\n    for (; w--; )\n      this.explosions.push(\n        new S({\n          x: t,\n          y: i,\n          ctx: this.ctx,\n          hue: s,\n          friction: p,\n          gravity: l,\n          flickering: o(0, 100) <= h,\n          lineWidth: c(\n            a.explosion.min,\n            a.explosion.max\n          ),\n          explosionLength: f(r),\n          brightness: u,\n          decay: d\n        })\n      );\n  }\n  drawExplosion() {\n    let t = this.explosions.length;\n    for (; t--; )\n      this.explosions[t].draw(), this.explosions[t].update(() => {\n        this.explosions.splice(t, 1);\n      });\n  }\n}\n\n\n\n//# sourceURL=webpack://gulp-2022/./node_modules/fireworks-js/dist/index.es.js?");

/***/ }),

/***/ "./src/js/components/featuresGeneral.js":
/*!**********************************************!*\
  !*** ./src/js/components/featuresGeneral.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   featuresGeneral: () => (/* binding */ featuresGeneral)\n/* harmony export */ });\nconst featuresGeneral = () => {\n  const video = document.querySelector('.features__video-block--video');\n  const tabs = document.querySelectorAll('.features__tab');\n  const delays = [0, 4000, 8000, 12000]; // Задержки в миллисекундах\n\n  let timeoutIds = [];\n  let currentTabIndex = 0;\n\n  const clearExistingTimeouts = () => {\n    timeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n    timeoutIds = [];\n  };\n\n  const activateTab = (startIndex = 0) => {\n    clearExistingTimeouts();\n    tabs.forEach((tab, index) => {\n      const delay = delays[index] - (startIndex > 0 ? delays[startIndex] : 0);\n      if (index >= startIndex) {\n        const timeoutId = setTimeout(() => {\n          tabs.forEach(t => t.classList.remove('active'));\n          tab.classList.add('active');\n          currentTabIndex = index;\n        }, delay);\n        timeoutIds.push(timeoutId);\n      }\n    });\n  };\n\n  const playVideo = () => {\n    if (video.readyState >= 2) {\n      video.play();\n    } else {\n      video.addEventListener('canplay', () => {\n        video.play();\n      }, { once: true });\n    }\n  };\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        activateTab();\n        playVideo();\n        observer.unobserve(video);\n      }\n    });\n  }, {\n    threshold: 0.5\n  });\n\n  observer.observe(video);\n\n  tabs.forEach((tab, index) => {\n    tab.addEventListener('click', () => {\n      tab.classList.add('pulse');\n\n      setTimeout(() => {\n        tab.classList.remove('pulse');\n      }, 500);\n\n      clearExistingTimeouts();\n      video.pause();\n      video.currentTime = delays[index] / 1000;\n      playVideo();\n      activateTab(index);\n      currentTabIndex = index;\n    });\n  });\n\n  video.addEventListener('timeupdate', () => {\n    const currentTime = video.currentTime * 1000; // Текущая позиция видео в миллисекундах\n    for (let i = delays.length - 1; i >= 0; i--) {\n      if (currentTime >= delays[i]) {\n        tabs.forEach(t => t.classList.remove('active'));\n        tabs[i].classList.add('active');\n        currentTabIndex = i;\n        break;\n      }\n    }\n  });\n\n  video.addEventListener('ended', () => {\n    video.currentTime = 0;\n    activateTab(0);\n    playVideo();\n  });\n\n  // Добавляем обработчик кликов и касаний на body для начала воспроизведения видео\n  document.body.addEventListener('click', () => {\n    if (video.paused) {\n      playVideo();\n    }\n  });\n\n  document.body.addEventListener('touchstart', () => {\n    if (video.paused) {\n      playVideo();\n    }\n  });\n\n  // Устанавливаем свойство loop для видео, чтобы оно воспроизводилось зациклено\n  video.loop = true;\n\n  // Начальная активация первой вкладки\n  activateTab(0);\n};\n\n//# sourceURL=webpack://gulp-2022/./src/js/components/featuresGeneral.js?");

/***/ }),

/***/ "./src/js/components/header.js":
/*!*************************************!*\
  !*** ./src/js/components/header.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Header: () => (/* binding */ Header)\n/* harmony export */ });\n// script modal login\nfunction modalLogin() {\n  const passwordInputs = document.querySelectorAll('input[type=\"password\"]');\n  // !toggle password\n  passwordInputs.forEach(passwordInput => {\n    const togglePasswordIcons = passwordInput.parentNode.querySelectorAll('.password-toggle-icon');\n\n\n    togglePasswordIcons.forEach(icon => {\n      icon.addEventListener('click', function() {\n        if (passwordInput.type === 'password') {\n          passwordInput.type = 'text';\n        } else {\n          passwordInput.type = 'password';\n        }\n        togglePasswordIcons.forEach(toggleIcon => {\n          toggleIcon.classList.toggle('active');\n        });\n      });\n    });\n  });\n}\nfunction authForm() {\n  // modal\n  const logInButton = document.querySelector('.menu__buttons--login');\n  const authModalButtonClose = document.querySelector('.login-modal--close-button');\n  const loginModal = document.querySelector('.login-modal');\n\n\n  // * change form buttons\n  const signUpChangeFormButton = document.getElementById('sign-up-change-form');\n  const logInChangeFormButton = document.getElementById('auth-change-form');\n  const forgotPassChangeFormButton = document.getElementById('forgot-pass-change-form');\n  const forgotPassSentEmailButton = document.getElementById('forgot-pass-sent-email');\n  const resendEmailButton = document.getElementById('resend-email');\n\n  // * form box\n  const logInFormBox = document.getElementById('auth-form');\n  const signUpFormBox = document.getElementById('sign-up-form');\n  const forgotPassFormBox = document.getElementById('forgot-pass-form');\n\n  const forgotSentEmail = document.getElementById('forgot-send-email');\n  const forgotResendEmail = document.getElementById('forgot-resend-email');\n  const newPasswordForm = document.getElementById('new-password-form');\n  // other\n  const emailInputLogIn = document.getElementById('emailLogin');\n  const continueButtonLogIn = document.getElementById('log-in-continue');\n\n\n  //  ! auth log in form add pass\n  continueButtonLogIn.addEventListener('click', function() {\n    if (emailInputLogIn.value.trim() !== '') {\n      logInFormBox.classList.add('is-hidden');\n    }\n  });\n\n  // Key click handler \"Login\"\n  logInChangeFormButton.addEventListener('click', function() {\n    logInFormBox.classList.add('active');\n    signUpFormBox.classList.remove('active');\n    forgotPassFormBox.classList.remove('active');\n  });\n\n  // Key click handler \"Sign Up\"\n  signUpChangeFormButton.addEventListener('click', function() {\n    signUpFormBox.classList.add('active');\n    logInFormBox.classList.remove('active');\n    forgotPassFormBox.classList.remove('active');\n  });\n\n  // Key click handler \"Forgot Password\"\n  forgotPassChangeFormButton.addEventListener('click', function() {\n    forgotPassFormBox.classList.add('active');\n    logInFormBox.classList.remove('active');\n    signUpFormBox.classList.remove('active');\n  });\n\n  // !  forgot pass\n  forgotPassSentEmailButton.addEventListener('click', function() {\n    forgotSentEmail.classList.add('is-hidden');\n    forgotResendEmail.classList.remove('is-hidden');\n  });\n\n  //   change resend email to new-password\n  resendEmailButton.addEventListener('click', function() {\n    newPasswordForm.classList.add('active');\n    forgotPassFormBox.classList.remove('active');\n  });\n\n  //  toggle modal\n  //!  toggle modal auth\n  function toggleModal() {\n    loginModal.classList.toggle('is-hidden');\n\n    forgotSentEmail.classList.remove('is-hidden');\n    logInFormBox.classList.remove('is-hidden');\n\n    newPasswordForm.classList.remove('active');\n    forgotPassFormBox.classList.remove('active');\n    signUpFormBox.classList.remove('active');\n\n    forgotResendEmail.classList.add('is-hidden');\n    logInFormBox.classList.add('active');\n\n    const body = document.querySelector('body');\n\n\n    body.classList.remove('modal-open');\n    const isHiddenWrapper = loginModal.classList.contains('is-hidden');\n    if (!isHiddenWrapper){\n      body.classList.remove('modal-open');\n    }else {\n      body.classList.add('modal-open');\n    }\n\n  }\n\n  logInButton.addEventListener('click', toggleModal);\n  authModalButtonClose.addEventListener('click', toggleModal);\n}\n// TODO: HeaderMenu open modal nav\nfunction headerToggleModalMenu (){\n  function toggleModalMenu() {\n    const burgerButton = document.querySelector('[data-action=\"openModal\"]');\n    const headerWrapper = document.querySelector('[data-action=\"header-wrapper\"]');\n    const body = document.querySelector('body');\n    const html = document.querySelector('html'); // Добавлено для манипуляции с элементом html\n\n    // Функция для получения ширины скроллбара\n    function getScrollbarWidth() {\n      const scrollDiv = document.createElement('div');\n      scrollDiv.style.width = '100px';\n      scrollDiv.style.height = '100px';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      document.body.appendChild(scrollDiv);\n\n      const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n\n      return scrollbarWidth;\n    }\n\n    const scrollbarWidth = getScrollbarWidth();\n\n    burgerButton.addEventListener('click', function() {\n      headerWrapper.classList.toggle('show-modal');\n      const isHiddenWrapper = headerWrapper.classList.contains('show-modal');\n\n      if (isHiddenWrapper) {\n        body.style.marginRight = `${scrollbarWidth}px`;\n        body.classList.add('modal-open');\n        html.style.overflowY = 'hidden'; // Добавлено для скрытия вертикальной прокрутки\n      } else {\n        body.style.marginRight = '';\n        body.classList.remove('modal-open');\n        html.style.overflowY = ''; // Убираем стиль overflow-y при закрытии модального окна\n      }\n    });\n  }\n\n  // ! toggle dropdown menu\n  function toggleDropdownMenu() {\n    const links = document.querySelectorAll('.header__menu-list-item--link > span');\n    links.forEach(function(span) {\n      span.addEventListener('click', function(event) {\n        event.preventDefault();\n\n        const listItem = this.closest('.header__menu-list-item');\n        const isShown = listItem.classList.contains('is-shown');\n        const allListItems = document.querySelectorAll('.header__menu-list-item');\n        allListItems.forEach(function(item) {\n          item.classList.remove('is-shown');\n        });\n        if (isShown) {\n          listItem.classList.remove('is-shown');\n        } else {\n          listItem.classList.add('is-shown');\n        }\n      });\n    });\n  }\n\n  // ! addScrollClass\n  function addScrollClass() {\n    const header = document.querySelector('[data-action=\"header-wrapper\"]');\n    const heroSection = document.getElementById('hero');\n\n    const headerBlock = document.querySelector('.header');\n    let lastScrollTop = 0;\n\n    if (heroSection) {\n      function handleScroll() {\n        if (header.classList.contains('show-modal')) {\n          return;\n        }\n\n        const heroRect = heroSection.getBoundingClientRect();\n        const heroBlockScroll = headerBlock.getBoundingClientRect();\n        const heroBottom = heroRect.bottom + window.scrollY - 80;\n        const heroShow = heroBlockScroll.bottom + 10;\n        const scrollTop = window.scrollY;\n\n        if (scrollTop > heroShow) {\n          header.classList.add('is-hidden');\n        } else {\n          header.classList.remove('is-hidden');\n        }\n\n        if (scrollTop > heroBottom / 2) {\n          header.style.zIndex = '9997';\n        } else {\n          header.style.zIndex = '9999';\n        }\n\n        if (scrollTop > heroBottom) {\n          header.classList.add('scroll');\n        } else {\n          header.classList.remove('scroll');\n        }\n\n        lastScrollTop = scrollTop;\n      }\n\n      window.addEventListener('scroll', handleScroll);\n    }\n  }\n\n  toggleDropdownMenu();\n  toggleModalMenu();\n  addScrollClass();\n}\n\nfunction ctaHeaderShow() {\n  let lastScrollTop = 0;\n  const ctaHeader = document.querySelector('.cta-header');\n  const ctaHeaderScroll = document.querySelector('.cta-header-scroll');\n\n  if (!ctaHeader || !ctaHeaderScroll ){\n    return\n  }\n  window.addEventListener('scroll', () => {\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    if (scrollTop > lastScrollTop) {\n      // ctaHeader.style.transform = 'translateY(-100%)';\n      ctaHeaderScroll.style.transform = 'translateY(0)';\n    } else {\n      // ctaHeader.style.transform = 'translateY(0)';\n      ctaHeaderScroll.style.transform = 'translateY(-100%)';\n    }\n    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;\n  });\n}\n\n\nconst Header = ()=>{\n  modalLogin()\n  authForm()\n  headerToggleModalMenu()\n  ctaHeaderShow()\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/components/header.js?");

/***/ }),

/***/ "./src/js/components/part-hero.js":
/*!****************************************!*\
  !*** ./src/js/components/part-hero.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n//hero 1-2-3-4\n      const heroBG = document.querySelectorAll(\".hero picture.hero__slide-img\");\n      const heroSpan = document.querySelectorAll(\".hero .hero__info-box--title span\");\n      const heroBtn = document.querySelector(\"#hero__buttonBG svg\")\n      const heroBtnTxt = document.querySelectorAll(\".hero__info-box--button span\")\n      const heroBtnBG = [\n        \"--gradient-1: #ff9b3c;--gradient-2: #e0483e;--gradient-3: #c43269;\" + \"--gradient-hover-1: #e0833c;--gradient-hover-2: #ff4f40;--gradient-hover-3: #db3278;\" + \"--gradient-stroke-1:#ffb067;--gradient-stroke-2:#ff4f40;--gradient-stroke-3:#db3278;\" + \"--button-glow-color:#e0483eaa\",\n\n        \"--gradient-1: #8a89d1;--gradient-2: #495fd3;--gradient-3: #822dcf;\" + \"--gradient-hover-1: #a2a1ec;--gradient-hover-2: #4b6fed;--gradient-hover-3: #962ee8;\" + \"--gradient-stroke-1:#b9b8f6;--gradient-stroke-2:#3d5dd2;--gradient-stroke-3:#5d1695;\" + \"--button-glow-color:#495fd3aa\",\n\n        \"--gradient-1: #dea037;--gradient-2: #dd5318;--gradient-3: #de1f1b;\" + \"--gradient-hover-1: #ffbc3b;--gradient-hover-2: #fe5a14;--gradient-hover-3: #ff1919;\" + \"--gradient-stroke-1:#ffca62;--gradient-stroke-2:#df5012;--gradient-stroke-3:#c40c0c;\" + \"--button-glow-color:#dd5318aa\",\n\n        \"--gradient-1: #a9ba6a;--gradient-2: #78b422;--gradient-3: #308f70;\" + \"--gradient-hover-1: #c8d979;--gradient-hover-2: #88d11d;--gradient-hover-3: #2ea380;\" + \"--gradient-stroke-1:#e4f0af;--gradient-stroke-2:#97dd31;--gradient-stroke-3:#176850;\" + \"--button-glow-color:#78b422aa\",\n      ];\n      const heroScroll = document.querySelector(\".hero__scroll-button-link svg\")\n      const heroScrollBG = [\n        \"--svg-scroll-1:#E1126E;--svg-scroll-2:#FF996E;--svg-scroll-3:#FF4A4A;\",\n        \"--svg-scroll-1:#A838FF;--svg-scroll-2:#A09EFF;--svg-scroll-3:#3B5EFF;\",\n        \"--svg-scroll-1:#FE5A14;--svg-scroll-2:#FFBC3B;--svg-scroll-3:#FF1919;\",\n        \"--svg-scroll-1:#A4D35F;--svg-scroll-2:#E5F1AF;--svg-scroll-3:#237427;\"]\n\n      \n\n      let heroTimer = setInterval(heroTick, 5000);\n      let prev = heroBG.length;\n      let current = 0;\n      let next = 1;\n\n      function heroTick() {\n        prev = current;\n        current++\n        if (current === heroBG.length) {\n          current = 0\n        }\n        heroBG[current].classList.add(\"active\")\n        heroSpan[current].classList.add(\"active\")\n        heroSpan[prev].classList.remove(\"active\")\n        \n        heroBtn.style.cssText = heroBtnBG[current];\n        heroBtnTxt[prev].classList.remove(\"active\")\n        heroScroll.style.cssText = heroScrollBG[current];\n        heroScroll.style.transition = \"transform 1s linear\";\n        if (current === 3) {\n          heroScroll.style.transform = \"rotate(\" + 180 * 1 + \"deg)\"\n        } else if (current === 0) {\n          heroScroll.style.transform = \"rotate(\" + 180 * 2 + \"deg)\"\n        } else {\n          heroScroll.style.transform = \"rotate(\" + 180 * current + \"deg)\"\n        }\n\n\n        //has to be bigger than CSS animation time\n        setTimeout(update, 700)\n        //half a time for text\n        setTimeout(showTxt,750)\n\n        function showTxt(){\n          heroBtnTxt[current].classList.add(\"active\")\n        }\n\n        function update() {\n          heroBG[prev].classList.remove(\"active\")\n          heroBG[current].classList.remove(\"next\")\n          heroSpan[current].classList.remove(\"next\")\n          if (current === 2 || current === 0) {\n            heroScroll.style.transition = \"transform 0s linear\";\n            heroScroll.style.transform = \"rotate(0deg)\"\n          }\n\n          next = current + 1\n          if (next === heroBG.length) {\n            next = 0\n          }\n          heroBG[next].classList.add(\"next\")\n          heroSpan[next].classList.add(\"next\")\n        }\n      }\n\n\n    /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (heroTick);\n\n//# sourceURL=webpack://gulp-2022/./src/js/components/part-hero.js?");

/***/ }),

/***/ "./src/js/components/slot/cardContentData.js":
/*!***************************************************!*\
  !*** ./src/js/components/slot/cardContentData.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomCasinoData: () => (/* binding */ getRandomCasinoData)\n/* harmony export */ });\n const casinosData = {\n  \"casinos\": [\n    {\n      \"rating\": \"4.8\",\n      \"title\": \"Casino A\",\n      \"imageUrl\": \"./img/slots/logo01.webp\",\n      \"reviewLink\": \"#\"\n    },\n    {\n      \"rating\": \"4.5\",\n      \"title\": \"Casino B\",\n      \"imageUrl\": \"./img/slots/logo02.webp\",\n      \"reviewLink\": \"#\"\n    },\n    {\n      \"rating\": \"4.9\",\n      \"title\": \"Casino C\",\n      \"imageUrl\": \"./img/slots/logo03.webp\",\n      \"reviewLink\": \"#\"\n    },\n    {\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo04.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo05.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.9\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo06.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo07.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo08.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo09.webp\",\n      \"reviewLink\": \"#\"\n    },{\n      \"rating\": \"4.7\",\n      \"title\": \"Casino D\",\n      \"imageUrl\": \"./img/slots/logo10.webp\",\n      \"reviewLink\": \"#\"\n    },\n\n  ]\n};\n\nfunction getRandomCasinoData() {\n  // Получаем случайный индекс из массива casinos\n  const randomIndex = Math.floor(Math.random() * casinosData.casinos.length);\n  return casinosData.casinos[randomIndex];\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/components/slot/cardContentData.js?");

/***/ }),

/***/ "./src/js/components/slot/slotMachine.js":
/*!***********************************************!*\
  !*** ./src/js/components/slot/slotMachine.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SlotMachine: () => (/* binding */ SlotMachine)\n/* harmony export */ });\n/* harmony import */ var _cardContentData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardContentData.js */ \"./src/js/components/slot/cardContentData.js\");\n/* harmony import */ var fireworks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fireworks-js */ \"./node_modules/fireworks-js/dist/index.es.js\");\n\n\n\nconst container = document.querySelector('.fwc ');\nconst fireworks = new fireworks_js__WEBPACK_IMPORTED_MODULE_1__.Fireworks(container, { /* options */ });\n\nlet rolling = false;\nlet current = 0;\ndocument.querySelectorAll('.slot__cards-list').forEach((el) => {\n  isElementDisplayNone(el) === true ? el.classList.add('hidden') : '';\n});\nconst slotList = document.querySelectorAll('.slot__cards-list:not(.hidden)');\nconst slotListsArray = [...slotList];\n\nconst SlotMachine = () => {\n  const button = document.getElementById('addActiveButton');\n  const slotBox = document.querySelector('.slot-list-box');\n  let speed = 70; // (in pixels per second)\n  let timers = [];\n\n  // TODO: Create Scroll list time Line\n  const timeLine = slotListsArray.map((list, index) => {\n    const scrollDirection = index % 2 ? speed : -speed;\n    return verticalLoop(list, scrollDirection);\n  });\n\n  function reset() {\n    fireworks.stop();\n    current = 0;\n    document.querySelectorAll('[data-action=\"win\"]').forEach((el) => {\n      el.classList.remove('active');\n      el.classList.remove('active-win');\n      el.setAttribute('data-action', 0);\n    });\n    document.querySelector('.slot-list-box').classList.add('active');\n    const title = document.querySelector('.slot-list-box--win-text');\n    title.classList.remove('show');\n    slotList.forEach((list) => {\n      const newWin = getRandomChildElement(list);\n      newWin.setAttribute('data-action', 'win');\n    });\n  }\n\n  function getRandomChildElement(parentElement) {\n    let children = parentElement.children; // Get all child elements\n    let randomIndex = Math.floor(Math.random() * children.length); // Generate a random index\n    const randomChild = children[randomIndex];\n\n    if(pointReached(randomChild) < 600 && pointReached(randomChild) > -600){\n      return  getRandomChildElement(parentElement);\n    }\n\n    return randomChild; // Return the random child element\n  }\n\n  function handleButtonClick() {\n    reset();\n    current = 0;\n\n    timeLine.forEach((tl, index) => {\n      tl.resume();\n      const delay = index + 2;\n      tl.timeScale(16);\n\n      gsap.delayedCall(delay, () => {\n      });\n    });\n  }\n\n  function handleButtonClickBackup() {\n    const title = document.querySelector('.slot-list-box--win-text');\n    // clear setTimeOut\n    timers.forEach(timerId => clearTimeout(timerId));\n    timers = []; // Reset timers\n\n    // TODO: delete active classes\n    deleteActiveClasses(title);\n    // TODO: replace Content and change speed\n    timeLine.forEach((item, index) => {\n      const currentList = slotList[index];\n      const cardElements = currentList.querySelectorAll('.slot__card--wrapper');\n      replaceContent(cardElements);\n      gsap.to(item, {\n        timeScale: 16,\n        duration: 1,\n        onComplete: () => {\n          item.restart();\n          // item.resume();\n        },\n      });\n\n      // item.timeScale(8);\n      // item.restart()\n      // item.resume()\n      slotBox.classList.add('active');\n    });\n\n    // TODO: stop with delay\n    timeLine.forEach((item, index) => {\n      let delay = 0;\n      const currentList = slotList[index];\n      const cardElements = currentList.querySelectorAll('.slot__card--wrapper');\n      const timerId = setTimeout(() => {\n        cardElements.forEach((card, i) => {\n          const dataAction = card.dataset.action;\n          item.to(card, {\n            timeScale: 0,\n            duration: 1,\n            onComplete: () => item.pause(),\n          });\n\n          if (dataAction === 'win') {\n            card.classList.add('active');\n          }\n          if (index + 1 === timeLine.length) {\n            addActiveClass(title);\n          }\n\n        });\n      }, delay);\n      timers.push(timerId);\n    });\n  }\n\n  button.addEventListener('click', (event) => handleButtonClick(event));\n};\n\n// TODO: replace content function\nfunction replaceContent(list) {\n  list.forEach((card, i) => {\n    // Заменяем информацию у первых трех блоков\n    if (i < 3) {\n      const selectedCasino = (0,_cardContentData_js__WEBPACK_IMPORTED_MODULE_0__.getRandomCasinoData)(); // Получаем случайные данные из JSON\n      const slotCard = card.querySelector('.slot__card');\n      const coverImage = slotCard.querySelector('.slot__card--cover');\n      const boxInfoImage = slotCard.querySelector('.slot__card--box-info--image');\n      const rating = slotCard.querySelector('.slot__card--box-info--container-rating');\n      const title = slotCard.querySelector('.slot__card--box-info--container-name');\n      const reviewLink = slotCard.querySelector('.slot__card--box-info--container-link');\n\n      coverImage.src = selectedCasino.imageUrl;\n      boxInfoImage.src = selectedCasino.imageUrl;\n      rating.textContent = selectedCasino.rating;\n      title.textContent = selectedCasino.title;\n      reviewLink.href = selectedCasino.reviewLink;\n    }\n  });\n}\n\n//TODO: delete active classes\nfunction deleteActiveClasses(title) {\n  title.classList.remove('show');\n  document.querySelectorAll('.slot__card--wrapper').forEach(i => {\n    i.classList.remove('active');\n    i.classList.remove('showAnimation');\n  });\n  document.querySelectorAll('.slot__cards-list').forEach(i => i.classList.remove('active'));\n}\n\n//TODO: add class to paused\nfunction addActiveClass(title) {\n  title.classList.add('show');\n  const activeCards = document.querySelectorAll('[data-action=\"win\"]');\n  activeCards.forEach(card => {\n    // card.classList.add('active');\n    card.classList.add('showAnimation');\n  });\n}\n\n//TODO: Vertical loop function\nfunction verticalLoop(list, speed) {\n  const tl = gsap.timeline({ repeat: -1 });\n  dragObserver(list, tl);\n  scrollObserver(list, tl);\n  marquee(speed, list, tl);\n\n  return tl;\n}\n\n\nfunction dragObserver(list, tl) {\n  list.querySelectorAll('.slot__card--wrapper').forEach((el) => {\n    el.addEventListener('mousedown', function() {\n      tl.pause();\n    });\n\n    el.addEventListener('mouseup', function() {\n      tl.play();\n    });\n  });\n}\n\nfunction marquee(speed, list, tl) {\n  let elements = Array.from(list.querySelectorAll('.slot__card--wrapper'));\n  const firstBounds = elements[0].getBoundingClientRect();\n  const lastBounds = elements[elements.length - 1].getBoundingClientRect();\n  const top = firstBounds.top - firstBounds.height - Math.abs(elements[1].getBoundingClientRect().top - firstBounds.bottom);\n  const bottom = lastBounds.top;\n  const distance = bottom - top;\n  const duration = Math.abs(distance / speed);\n  const plus = speed < 0 ? '-=' : '+=';\n  const minus = speed < 0 ? '+=' : '-=';\n\n  elements.forEach((el, i) => {\n    const bounds = el.getBoundingClientRect();\n    let ratio = Math.abs((bottom - bounds.top) / distance);\n    if (speed < 0) {\n      ratio = 1 - ratio;\n    }\n\n    tl.to(el, {\n      y: plus + distance * ratio,\n      duration: duration * ratio,\n      ease: 'none',\n      roundProps: { y: 1 },\n    }, 0);\n\n    tl.fromTo(el, {\n      y: minus + distance,\n    }, {\n      y: plus + (1 - ratio) * distance,\n      ease: 'none',\n      duration: (1 - ratio) * duration,\n      immediateRender: false,\n      roundProps: { y: 1 },\n      onUpdate: function() {\n        checkWinPosition(tl, speed);\n      },\n    }, duration * ratio);\n  });\n\n\n  function checkWinPosition(tl, speed) {\n    if(document.querySelector('.slot-list-box').classList.contains('active')){\n    const winElement = list.querySelector('[data-action=\"win\"]');\n    if (winElement) {\n      const index = slotListsArray.indexOf(list);\n\n      if (index === current) {\n        if (speed < 0) {\n          const offsetFromMiddle = ofTopMiddle(winElement);\n\n          if (offsetFromMiddle > -30 && offsetFromMiddle < 0) {\n            tl.timeScale(1);\n          }\n        } else if (speed > 0) {\n          const offsetFromMiddle = ofBottomMiddle(winElement);\n\n          if (offsetFromMiddle < 30 && offsetFromMiddle > 0) {\n            tl.timeScale(1);\n          }\n        }\n\n        const reached = pointReached(winElement);\n        if (reached < 1 && reached > -1) {\n          tl.pause();\n          winElement.classList.add('active');\n          current++;\n\n          if (current === slotList.length) {\n            const title = document.querySelector('.slot-list-box--win-text');\n            title.classList.add('show');\n            fireworks.start();\n          }\n        }\n\n        // if (rolling === true && diff) {\n        //   tl.timeScale(1);\n        // }\n\n        // if (rolling === true && (elPos > -2 && elPos < 2)) {\n        //   tl.pause(); // Pause the timeline\n        //   winElement.classList.add('active');\n        //   current++;\n        //\n        //   if (current === slotList.length) {\n        //     const title = document.querySelector('.slot-list-box--win-text');\n        //     setTimeout(function() {\n        //       title.classList.add('show');\n        //       fireworks.start()\n        //     }, 1000);\n        //   }\n        // }\n      }\n    }\n    }\n  }\n}\n\nfunction ofTopMiddle(el) {\n  const elOffset = (el.getBoundingClientRect().top + document.documentElement.scrollTop).toFixed(0);\n  const container = document.querySelector('.slot-list-box');\n  const containerMiddleOffset = (container.getBoundingClientRect().top + document.documentElement.scrollTop + (container.getBoundingClientRect().height / 2)).toFixed(0);\n\n  return elOffset - containerMiddleOffset;\n}\n\nfunction ofBottomMiddle(el) {\n  const elOffset = (el.getBoundingClientRect().bottom + document.documentElement.scrollTop).toFixed(0);\n  const container = document.querySelector('.slot-list-box');\n  const containerMiddleOffset = (container.getBoundingClientRect().top + document.documentElement.scrollTop + (container.getBoundingClientRect().height / 2)).toFixed(0);\n\n  return elOffset - containerMiddleOffset;\n}\n\nfunction scrollObserver(list, tl) {\n  let isScrolling = false;\n\n  function updateAnimationSpeed(scrollSpeed) {\n    const speedMultiplier = 1 + Math.abs(scrollSpeed); // Adjust multiplier based on scroll speed\n    gsap.to(tl, 0.5, { timeScale: speedMultiplier, duration: 3, ease: 'ease' });\n  }\n\n// Add event listener for mouseenter\n  list.addEventListener('mouseenter', () => {\n    isScrolling = true; // Set scrolling flag to true when mouse enters\n    window.addEventListener('wheel', scrollHandler, { passive: false }); // Add scroll event listener\n  });\n\n// Add event listener for mouseleave\n  list.addEventListener('mouseleave', () => {\n    isScrolling = false; // Reset scrolling flag to false when mouse leaves\n    window.removeEventListener('wheel', scrollHandler); // Remove scroll event listener\n    gsap.to(tl, 0.5, { timeScale: 1, duration: 3, ease: 'ease' });\n  });\n\n// Scroll event handler\n  function scrollHandler(event) {\n    event.preventDefault(); // Prevent default scroll behavior\n    const scrollSpeed = event.deltaY; // Get scroll speed\n    console.log(scrollSpeed);\n    updateAnimationSpeed(scrollSpeed); // Update animation speed based on scroll speed\n  }\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction pointReached(el) {\n  const elOffset = ((el.getBoundingClientRect().top + document.documentElement.scrollTop) + (el.getBoundingClientRect().height / 2));\n  const container = document.querySelector('.slot-list-box');\n  const containerMiddleOffset = (container.getBoundingClientRect().top + document.documentElement.scrollTop + (container.getBoundingClientRect().height / 2));\n\n  return elOffset - containerMiddleOffset;\n}\n\nfunction isElementDisplayNone(el) {\n  // Get the computed style of the element\n  const computedStyle = window.getComputedStyle(el);\n\n  // Check if the display property is 'none'\n  return computedStyle.display === 'none';\n}\n\ndocument.querySelectorAll('.slot__card--wrapper').forEach((el) => {\n    el.addEventListener('mouseover', function() {\n      if(document.querySelector('.slot-list-box').classList.contains('active')){\n        el.classList.add('active-win');\n      }\n    })\n})\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/components/slot/slotMachine.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_slot_slotMachine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/slot/slotMachine.js */ \"./src/js/components/slot/slotMachine.js\");\n/* harmony import */ var _components_part_hero_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/part-hero.js */ \"./src/js/components/part-hero.js\");\n/* harmony import */ var _components_header_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/header.js */ \"./src/js/components/header.js\");\n/* harmony import */ var _components_featuresGeneral_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/featuresGeneral.js */ \"./src/js/components/featuresGeneral.js\");\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var galleryTop = new Swiper('.gallery-top', {\n    navigation: {\n      nextEl: '.services-slider-nav-next',\n      prevEl: '.services-slider-nav-prev',\n    },\n    slidesPerView: 1,\n    // effect: \"none\",\n    // speed:0,\n    maxBackfaceHiddenSlides:true,\n    effect: 'fade',\n    fadeEffect: {\n      crossFade: false\n    },\n    // effect: 'fade',\n    loop: true,\n\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n      renderBullet: function (index, className) {\n        return '<span class=\"' + className + '\"></span>';\n      },\n    },\n\n    on: {\n      slideChangeTransitionStart: function () {\n        let videos = document.querySelectorAll('.swiper-slide video');\n        videos.forEach((video) => {\n          video.pause();\n          video.currentTime = 0;\n        });\n\n        let activeSlideVideo = this.slides[this.activeIndex].querySelector('video');\n        if (activeSlideVideo) {\n          activeSlideVideo.pause();\n          activeSlideVideo.currentTime = 0;\n          activeSlideVideo.load(); // Добавляем загрузку видео перед воспроизведением\n          activeSlideVideo.addEventListener('loadeddata', function onLoadedData() {\n            activeSlideVideo.play();\n            activeSlideVideo.removeEventListener('loadeddata', onLoadedData);\n          });\n        }\n      },\n      init: function () {\n        // Воспроизведение первого видео при загрузке\n        let activeSlideVideo = this.slides[this.activeIndex].querySelector('video');\n        if (activeSlideVideo) {\n          activeSlideVideo.load(); // Добавляем загрузку видео перед воспроизведением\n          activeSlideVideo.addEventListener('loadeddata', function onLoadedData() {\n            activeSlideVideo.play();\n            activeSlideVideo.removeEventListener('loadeddata', onLoadedData);\n          });\n        }\n      }\n    }\n  });\n\n  var galleryThumbs = new Swiper('.gallery-thumbs', {\n    slidesPerView: 1,\n    slideToClickedSlide: true,\n    allowTouchMove: false,\n    loop: true,\n    maxBackfaceHiddenSlides:true,\n  });\n\n  galleryTop.controller.control = galleryThumbs;\n  galleryThumbs.controller.control = galleryTop;\n\n  // Добавляем обработчик кликов и касаний на body для начала воспроизведения видео\n  document.body.addEventListener('click', () => {\n    const videoElements = document.querySelectorAll('.swiper-slide video');\n    videoElements.forEach(videoElement => {\n      if (videoElement.paused) {\n        videoElement.play().catch(error => {\n          console.error('Error playing video:', error);\n        });\n      }\n    });\n  });\n\n  document.body.addEventListener('click touchstart', () => {\n    const videoElements = document.querySelectorAll('.swiper-slide video');\n    videoElements.forEach(videoElement => {\n      if (videoElement.paused) {\n        videoElement.play()\n      }\n    });\n  });\n\n\n  (0,_components_featuresGeneral_js__WEBPACK_IMPORTED_MODULE_3__.featuresGeneral)();\n  (0,_components_header_js__WEBPACK_IMPORTED_MODULE_2__.Header)();\n  (0,_components_slot_slotMachine_js__WEBPACK_IMPORTED_MODULE_0__.SlotMachine)();\n  (0,_components_part_hero_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n});\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;